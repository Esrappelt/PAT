#include <iostream>
#include <stdio.h>
#include <string.h>
using namespace std;


//哈希表
int count[100];


int main()
{
	char str1[1000],str2[1000];
	gets(str1);
	gets(str2);
	int len1 = strlen(str1),len2 = strlen(str2);
	int i,cnt = 0;
	for(i = 0; i < len1; i++)
		count[str1[i]]++;//统计原珠子各个字母数字有多少个，放入哈希表中
	for(i = 0; i < len2; i++)
	{
		if(count[str2[i]] > 0)
			count[str2[i]]--;//有这个字母，则它的值减1
		else
			cnt++;//当count[str2[i]]为0的时候就是没有这个字母或数字,就令cnt++
	}
	if(cnt == 0)//如果一个都不缺，就满足，且剩下的长度是两字符串长度之差
	{
		cout << "Yes " << len1 - len2;
	}
	else
		cout << "No " << cnt;//如果有缺的，就输出缺多少个
	return 0;
}

/*
小红想买些珠子做一串自己喜欢的珠串。卖珠子的摊主有很多串五颜六色的珠串，但是不肯把任何一串拆散了卖。于是小红要你帮忙判断一下，某串珠子里是否包含了全部自己想要的珠子？如果是，那么告诉她有多少多余的珠子；如果不是，那么告诉她缺了多少珠子。

为方便起见，我们用[0-9]、[a-z]、[A-Z]范围内的字符来表示颜色。例如在图1中，第3串是小红想做的珠串；那么第1串可以买，因为包含了全部她想要的珠子，还多了8颗不需要的珠子；第2串不能买，因为没有黑色珠子，并且少了一颗红色的珠子。


图 1
输入格式：

每个输入包含1个测试用例。每个测试用例分别在2行中先后给出摊主的珠串和小红想做的珠串，两串都不超过1000个珠子。

输出格式：

如果可以买，则在一行中输出“Yes”以及有多少多余的珠子；如果不可以买，则在一行中输出“No”以及缺了多少珠子。其间以1个空格分隔。
*/